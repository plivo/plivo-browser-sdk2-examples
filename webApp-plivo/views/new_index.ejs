<html>
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Plivo Browser Check</title>
	<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
	<script type="text/javascript" src="//code.jquery.com/jquery-1.9.1.js"></script>
	<script type="text/javascript" src="//code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
	<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
	<script type="text/javascript" src="//s3.amazonaws.com/plivosdk/web/plivo.min.js"></script>
	<script type="text/javascript" src="js/browsercheck.js"></script>
	<style>
		table { table-layout: fixed; }
		table th, table td { overflow: hidden; }
	</style>
	<script language="javascript">var js_version="1.0"</script>
	<script language="javascript1.1">var js_version="1.1"</script>
	<script language="javascript1.2">var js_version="1.2"</script>
	<script language="javascript1.3">var js_version="1.3"</script>
	<script language="javascript1.4">var js_version="1.4"</script>
	<script language="javascript1.5">var js_version="1.5"</script>
	<script language="javascript1.6">var js_version="1.6"</script>
	<script language="javascript1.7">var js_version="1.7"</script>
	<script language="javascript1.8">var js_version="1.8"</script>
	<script language="javascript1.9">var js_version="1.9"</script>
	<script type="text/javascript">
	var plivocheck;
	var webrtcStatus;
	var isCallActive = false;
	var statsTimer;

	function webrtcCheck() {
		var status = plivocheck.checkWebRTC();
		$('#webrtc_row').removeClass('warning');
		if (!status) {
			$('#webrtc_row').addClass('danger');
			$('#webrtc_status').text('WebRTC is not supported');
			return false;
		} else {
			$('#webrtc_row').addClass('success');
			$('#webrtc_status').text('WebRTC is supported');
			return true;
		}
	}

	function browserCheck() {
		var info = plivocheck.checkBrowser();
		var browserStatus = 'Browser Version : ' + info[0] + ' ' + info[1];

		$('#browser_row').addClass('success');
		$('#browser_status').text(browserStatus);

		$('#browser_row').removeClass('warning');

		return true;
	}

	function jsCheck() {
		$('#js_row').addClass('success');
		$('#js_status').text('JavaScript version ' + js_version);

		$('#js_row').removeClass('warning');

		return true;
	}

	function wsCheck() {
		var status = plivocheck.checkWebSocket();
		$('#ws_row').removeClass('warning');
		if (!status) {
			$('#ws_row').addClass('danger');
			$('#ws_status').text('WebSocket : not available');
			return false;
		} else {
			$('#ws_row').addClass('success');
			$('#ws_status').text('WebSocket : available');
			return true;
		}
	}

	function flashCheck() {
		var status = plivocheck.checkFlash();
		$('#flash_row').removeClass('warning');
		if (!status) {
			if (!webrtcStatus) {
				$('#flash_row').addClass('danger');
				$('#flash_status').text('Flash is not supported');
			} else {
				$('#flash_row').addClass('warning');
				$('#flash_status').text('Flash is not supported, we will use WebRTC');
			}
			return false;
		} else {
			var flash_ver = plivocheck.getFlashVer();
			$('#flash_row').addClass('success');
			$('#flash_status').text('Flash : ' + flash_ver);
			if (!webrtcStatus) {
				$('#webrtc_row').removeClass('danger');
				$('#webrtc_row').addClass('warning');
				$('#webrtc_status').text('WebRTC is not supported, will fallback to flash');
			}
			return true;
		}
	}

	function login() {
		Plivo.conn.login($('#inp_username').val(), $('#inp_password').val());
	}

	function test_outbound_call() {
		Plivo.conn.call('browsercheck150514110205');
		showActiveCallUI();
	}

	function showActiveCallUI() {
		$('#call_box').hide();
		$('#active_call_box').show();
		$('#stats_box').hide();
	}

	function hangup() {
		clearInterval(statsTimer);
		statsTimer = null;
		Plivo.conn.hangup();
		showCallBox();
	}

	function onReady() {
		console.log('onReady');
		$('#check_status_box').hide();
		$('#login_box').show();
		confGetEndpoint();
	}

	function onLogin() {
		showCallBox();
	}

	function onLoginFailed() {
		alert('Login failed, please check your username & password');
	}

	function onCallAnswered() {
		$('#active_call_status').text('Answered');
		isCallActive = true;
		//stats only available on webrtc
		if (webrtcStatus) {
			$('#stats_box').show();
			//reset statsbox
			$('#conn_state_txt').text('');
			$('#audio_inp_level_txt').text('');
			$('#audio_out_level_txt').text('');
		} else {
			$('#conn_state_txt').text('Connected');
		}
		statsTimer = setInterval(function () {PlivoDebug.getStats();}, 1000)
	}

	Plivo.onFlashStats = function (micLevel, bytesRecv, bytesSent, outLevel, inLevel, micVol, speakerVol) {
		console.log('micLevel='+micLevel);
		$('#bytes_sent_txt').text(bytesSent);
		$('#bytes_received_txt').text(bytesRecv);
		$('#audio_inp_level_txt').text(micVol + ' (max = 1)');
		$('#audio_out_level_txt').text(speakerVol + ' (max = 1)');
		$('#mic_level_row').show();
		$('#mic_level_txt').text(micLevel);
	};

	function onCalling() {
		$('#stats_box').show();
		if (!webrtcStatus) {
			$('#conn_state_label').text('Calling state');
			$('#conn_state_txt').text('Initializing..');
		}
	}

	function onCallRemoteRinging() {
		if (!webrtcStatus) {
			$('#conn_state_txt').text('Remote ringing..');
		}
	}
	function onCallFailed() {
		isCallActive = false;
		$('#call_status').text('Call Failed');
		$('#call_status').show();
		showCallBox();
	}

	function onCallTerminated() {
		isCallActive = false;
		if (statsTimer) {
			clearInterval(statsTimer);
		}
		$('#call_status').text('Call Ended');
		$('#call_status').show();
		showCallBox();
		$('#conn_state_txt').text('Ended');
	}

	function onStats(stats) {
		if (!isCallActive) {
			return;
		}
		$('#audio_out_level_txt').text(stats.audioOutputLevel);
		$('#audio_inp_level_txt').text(stats.audioInputLevel);
		$('#bytes_sent_txt').text(stats.bytesSent);
		$('#bytes_received_txt').text(stats.bytesReceived);
	}

	function onIceConnStateChange(state) {
		if (!isCallActive) {
			return;
		}
		$('#conn_state_txt').text(state);
	}

	function loadPlivoWebSDK() {
		Plivo.onReady = onReady;
		Plivo.onLogin = onLogin;
		Plivo.onLoginFailed = onLoginFailed;
		Plivo.onCallAnswered = onCallAnswered;
		Plivo.onCalling = onCalling;
		Plivo.onCallRemoteRinging = onCallRemoteRinging;
		Plivo.onCallFailed = onCallFailed;
		Plivo.onCallTerminated = onCallTerminated;
		Plivo.onStats = onStats;
		Plivo.onIceConnStateChange = onIceConnStateChange;
		Plivo.init( {
			'perm_on_click': true,
			'debug': true
		});
	}

	function showCallBox() {
		$('#active_call_box').hide();
		$('#login_box').hide();
		$('#call_box').show();
		$('#active_call_status').text('Calling...');
	}

	function setCurrentTime() {
		var currTime = Date().toString();
		$('#current_time_txt').text(currTime);
	}

	function detectOS() {
		var os_name = plivocheck.checkOS();
		if (os_name !== undefined) {
			$('#os_row').removeClass('warning');
			$('#os_row').addClass('success');
			$('#os_status').text('OS : ' + os_name);
		}
	};
	$(document).ready(function(){
		plivocheck = new window.PlivoCheck();

		setCurrentTime();
		detectOS();

		//init conference
		confInit();

		webrtcStatus = webrtcCheck();

		var isBrowserSupported = false;
		var browserStatus = browserCheck();
		var jsStatus = jsCheck();
		var wsStatus = wsCheck();
		var flashStatus = flashCheck();

		if (browserStatus && jsStatus) {
			if (wsStatus && webrtcStatus) {
				isBrowserSupported = true;
			} else if (flashStatus) {
				isBrowserSupported = true;
			}
		}

		if (isBrowserSupported) {
			console.log("Browser is supported");
			$('#check_status').text('Your browser is supported by Plivo WebSDK. Loading plivo websdk now....');
			loadPlivoWebSDK();
		} else {
			$('#check_status').text('Your browser is not supported by Plivo WebSDK');
			$('#check_status').removeClass('alert-info');
			$('#check_status').addClass('alert-danger');
		}
	});
	</script>
</head>
<body>
	<div class='container'>
		<div class="masthead">
			<ul class="nav nav-pills pull-right">
				<li><a href="https://plivo.com/" target="_blank">Go to plivo.com</a></li>
			</ul>
			<h2 class="muted">Plivo Browsercheck</h2>
		</div>
		<p class='lead'>This page will test your browser for Plivo WebSDK compatibility. You can also make a call to test your connection.
		</p>
		<div class='row'><!-- Test Row -->
			<div class='col-lg-4' id='check_box'>
				<table class='table'>
					<p id='current_time_txt'>
						Get Current Time....
					</p>
					<tr id='os_row' class='warning'>
						<td id='os_status'>Checking your operating system...</td>
					</tr>
					<tr><td></td></tr>
					<tr id='browser_row' class='warning'>
						<td id='browser_status'>Checking browser name & version...</td>
					</tr>
					<tr><td></td></tr>
					<tr id='js_row' class='warning'>
						<td id='js_status'>Checking Javascript....</td>
					</tr>
					<tr><td></td></tr>
					<tr id='ws_row' class='warning'>
						<td id='ws_status'>Checking websocket...</td>
					</tr>
					<tr><td></td></tr>
					<tr id='flash_row' class='warning'>
						<td id='flash_status'>Checking Flash...</td>
					</tr>
					<tr><td></td></tr>
					<tr id='webrtc_row' class='warning'>
						<td id='webrtc_status'>Checking Webrtc...</td>
					</tr>
					<tr><td></td></tr>
				</table>
			</div>
			<div class='col-lg-4' id='phone_box'>
				<div id ='check_status_box'>
					<h3><div id='check_status' class='alert alert-info'>Checking your browser for compatibility with Plivo WebSDK.....</div><h3>
				</div>
				<div id='login_box'  style="display: none">
					<h3><div id='check_status' class='alert alert-info'>Your browser is supported by Plivo WebSDK</div></h3>
					<span class='alert alert-info'>Initializing test call.....</span>
				</div>
				<div id='call_box' style='display: none'>
					<form class='form-inline'>
						<legend>Press 'Call' button to test phone call</legend>
						<div class='alert alert-info' id='call_status' style='display: none'></div>
						<input type='button' onclick='test_outbound_call()' value='Test Outbound Call' class='btn btn-success'>
					</form>
				</div>
				<div id='active_call_box' style='display: none'>
					<legend>Test Call</legend>
					<div class="alert alert-info" id="active_call_status">Calling..</div>
					<input type='button' onclick='hangup()' value='Stop' class='btn btn-success form-control'>
				</div>
			</div>
			<div class='col-lg-4' id='stats_box' style='display: none'>
				<legend>Call statistic and state</legend>
				<table class='table table-striped table-condensed'>
					<tr>
						<td id='conn_state_label'>ICE State</td>
						<td id='conn_state_txt'></td>
					</tr>
					<tr id='mic_level_row' style="display: none">
						<td>Microphone Level</td>
						<td id='mic_level_txt'></td>
					</tr>
					<tr>
						<td>Audio Input Level</td>
						<td id='audio_inp_level_txt'></td>
					</tr>
					<tr>
						<td>Audio Output Level</td>
						<td id='audio_out_level_txt'></td>
					</tr>
					<tr>
						<td>Bytes Sent</td>
						<td id='bytes_sent_txt'></td>
					</tr>
					<tr>
						<td>Bytes Received</td>
						<td id='bytes_received_txt'></td>
					</tr>
				</table>
			</div>
		</div><!-- Test Row - End -->
		<div class='row'><hr>
		</div>
		<div class='row'>
			<div class='col-lg-4'></div>
			<div class='col-lg-4'>
				<input type='button' onclick='formReport()' value='Share This Info' class='btn btn-primary'>
			</div>
			<div class='col-lg-4'></div>
		</div>
	</div><!-- Container -->
	<div id='dlgReport' title='Share This Info'  style="display: none;">
		<p>Email (must be filled)</p>
		<input type='text' id='reporter_email'></input>
	</div>
	<script type="text/javascript">
	function formReport() {
		$('#dlgReport').dialog({
			modal: true,
			width: 250,
			resizable: false,
			buttons: {
					"Submit": function() {
						if ($('#reporter_email').val().length > 0 ) {
							sendReport();
							$(this).dialog("close");
						}
					},
					"Cancel": function() {
						$(this).dialog("close");
					}
				}
			});
	}

	function sendReport() {
		//construct browser data
		var browserData = {
			'currentTime': $('#current_time_txt').text(),
			'osNameVersion': $('#os_status').text(),
			'browserVersion': $('#browser_status').text(),
			'jsVersion': $('#js_status').text(),
			'wsStatus': $('#ws_status').text(),
			'flashVersion': $('#flash_status').text(),
			'webrtcStatus': $('#webrtc_status').text()
		};
		if (!webrtcStatus) {
			browserData.micLevel = $('#mic_level_txt').text();
		}
		//construct call state & stats
		var callState = {
			'connState': $('#conn_state_txt').text(),
			'inputLevel': $('#audio_inp_level_txt').text(),
			'outputLevel': $('#audio_out_level_txt').text(),
			'bytesSent': $('#bytes_sent_txt').text(),
			'bytesRecv': $('#bytes_received_txt').text()
		};
		_doSendReport(browserData, callState, $('#issue_reporter').val(), $('#reporter_email').val(), $('#issue_desc').val());
	}
	</script>
</body>
</html>
